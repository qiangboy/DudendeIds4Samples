version: '3.4'

services:
  ids-1:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro


  ids-2:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro


  jsclientweb:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5003
    ports:
      - "5003:5003"


  productservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5101


  orderservice:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5102


  mysql:
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: test
      MYSQL_PASSWORD: 123456
    volumes:
      - ./mysql_data:/var/lib/mysql
      

  nginx-for-ids:
    ports:
      - 5000:80
    volumes:
      - ./nginx-for-ids-config/nginx.conf:/etc/nginx/nginx.conf


  nginx-for-client:
    ports:
      - 5003:80
    volumes:
      - ./nginx-for-client-config/nginx.conf:/etc/nginx/nginx.conf

   
  nginx-for-api-gateway:
    ports:
      - 5100:80
    volumes:
      - ./nginx-for-api-gateway-config/nginx.conf:/etc/nginx/nginx.conf


  redis:
    command: redis-server --requirepass 123456
    volumes:
      - ./redis_data:/data

